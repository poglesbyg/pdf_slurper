apiVersion: v1
kind: List
metadata:
  name: pdf-slurper-v2
items:
  # ConfigMap for application configuration
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: pdf-slurper-config
      labels:
        app: pdf-slurper
        version: v2
    data:
      PDF_SLURPER_ENV: "production"
      PDF_SLURPER_USE_NEW: "true"
      PDF_SLURPER_HOST: "0.0.0.0"
      PDF_SLURPER_PORT: "8080"
      LOG_LEVEL: "INFO"
      API_DOCS_ENABLED: "false"  # Disable in production
      QC_AUTO_APPLY: "false"
      WORKERS: "4"

  # Secret for sensitive data
  - apiVersion: v1
    kind: Secret
    metadata:
      name: pdf-slurper-secret
      labels:
        app: pdf-slurper
        version: v2
    type: Opaque
    stringData:
      DATABASE_URL: "sqlite:////data/pdf_slurper.db"  # Replace with PostgreSQL in production
      API_KEY: "changeme"  # Generate a secure key
      JWT_SECRET: "changeme"  # Generate a secure secret

  # PersistentVolumeClaim for data
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: pdf-slurper-data-v2
      labels:
        app: pdf-slurper
        version: v2
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: standard

  # BuildConfig for building the image
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      name: pdf-slurper-v2
      labels:
        app: pdf-slurper
        version: v2
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: pdf-slurper:v2
      source:
        type: Git
        git:
          uri: https://github.com/yourusername/pdf-slurper.git
          ref: main
      strategy:
        type: Docker
        dockerStrategy:
          dockerfilePath: Dockerfile.v2
          buildArgs:
            - name: VERSION
              value: "2.0.0"
      triggers:
        - type: ConfigChange
        - type: GitHub
          github:
            secret: github-webhook-secret

  # ImageStream for the built image
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      name: pdf-slurper
      labels:
        app: pdf-slurper
    spec:
      lookupPolicy:
        local: true

  # Deployment
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: pdf-slurper-v2
      labels:
        app: pdf-slurper
        version: v2
    spec:
      replicas: 2
      revisionHistoryLimit: 3
      selector:
        matchLabels:
          app: pdf-slurper
          version: v2
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
      template:
        metadata:
          labels:
            app: pdf-slurper
            version: v2
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "8080"
            prometheus.io/path: "/metrics"
        spec:
          containers:
            - name: pdf-slurper
              image: pdf-slurper:v2
              imagePullPolicy: Always
              ports:
                - containerPort: 8080
                  protocol: TCP
                  name: http
              envFrom:
                - configMapRef:
                    name: pdf-slurper-config
                - secretRef:
                    name: pdf-slurper-secret
              volumeMounts:
                - name: data
                  mountPath: /app/data
                - name: uploads
                  mountPath: /app/uploads
                - name: logs
                  mountPath: /app/logs
              resources:
                requests:
                  memory: "256Mi"
                  cpu: "100m"
                limits:
                  memory: "1Gi"
                  cpu: "500m"
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
                timeoutSeconds: 5
                failureThreshold: 3
              readinessProbe:
                httpGet:
                  path: /ready
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 10
                timeoutSeconds: 5
                failureThreshold: 3
              startupProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 5
                failureThreshold: 30
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: pdf-slurper-data-v2
            - name: uploads
              emptyDir: {}
            - name: logs
              emptyDir: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            fsGroup: 1000

  # Service
  - apiVersion: v1
    kind: Service
    metadata:
      name: pdf-slurper-v2
      labels:
        app: pdf-slurper
        version: v2
      annotations:
        service.alpha.openshift.io/serving-cert-secret-name: pdf-slurper-tls
    spec:
      type: ClusterIP
      ports:
        - port: 8080
          targetPort: 8080
          protocol: TCP
          name: http
      selector:
        app: pdf-slurper
        version: v2

  # Route with TLS
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: pdf-slurper-v2
      labels:
        app: pdf-slurper
        version: v2
      annotations:
        haproxy.router.openshift.io/timeout: 60s
        haproxy.router.openshift.io/hsts_header: "max-age=31536000;includeSubDomains;preload"
    spec:
      host: pdf-slurper-v2.apps.cloudapps.unc.edu
      path: /
      to:
        kind: Service
        name: pdf-slurper-v2
        weight: 100
      port:
        targetPort: http
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect

  # HorizontalPodAutoscaler
  - apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    metadata:
      name: pdf-slurper-v2-hpa
      labels:
        app: pdf-slurper
        version: v2
    spec:
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: pdf-slurper-v2
      minReplicas: 2
      maxReplicas: 10
      metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 70
        - type: Resource
          resource:
            name: memory
            target:
              type: Utilization
              averageUtilization: 80

  # NetworkPolicy (optional, for security)
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: pdf-slurper-network-policy
      labels:
        app: pdf-slurper
        version: v2
    spec:
      podSelector:
        matchLabels:
          app: pdf-slurper
          version: v2
      policyTypes:
        - Ingress
        - Egress
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  name: openshift-ingress
          ports:
            - protocol: TCP
              port: 8080
      egress:
        - to:
            - namespaceSelector: {}
          ports:
            - protocol: TCP
              port: 443  # HTTPS
            - protocol: TCP
              port: 5432  # PostgreSQL
            - protocol: TCP
              port: 6379  # Redis
